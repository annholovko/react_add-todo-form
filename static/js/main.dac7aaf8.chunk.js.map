{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","components/Helpers/helpers.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","userId","findUserById","usersFromServer","find","preparedTodos","todosFromServer","newTodoId","Math","max","App","useState","setTitle","selectedUser","setSelectedUser","isTitleError","setisTitleError","isUserError","setisUserError","setTodos","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","prevTodos","newTodo","Number","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dac7aaf8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../Types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","/* eslint-disable @typescript-eslint/comma-dangle */\nimport { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import usersFromServer from '../../api/users';\nimport todosFromServer from '../../api/todos';\n\nimport { User } from '../Types/User';\nimport { Todo } from '../Types/Todo';\n\nexport const findUserById = (userId: number): User | null => (\n  usersFromServer.find((user) => user.id === userId) || null\n);\n\nexport const preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const newTodoId: number = Math.max(\n  ...todosFromServer.map(todo => todo.id),\n) + 1;\n","import './App.scss';\nimport { FC, useState } from 'react';\n\nimport usersFromServer from './api/users';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/Types/Todo';\n\nimport {\n  findUserById,\n  preparedTodos,\n  newTodoId,\n} from './components/Helpers/helpers';\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [isTitleError, setisTitleError] = useState(false);\n  const [isUserError, setisUserError] = useState(false);\n  const [todos, setTodos] = useState(preparedTodos);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setisTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setisUserError(true);\n    }\n\n    if (!trimmedTitle || !selectedUser) {\n      return;\n    }\n\n    setTodos((prevTodos) => {\n      const newTodo: Todo = {\n        id: newTodoId,\n        title: trimmedTitle,\n        completed: false,\n        userId: Number(selectedUser),\n        user: findUserById(selectedUser),\n      };\n\n      return [...prevTodos, newTodo];\n    });\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setisTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(Number(event.target.value));\n    setisUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}